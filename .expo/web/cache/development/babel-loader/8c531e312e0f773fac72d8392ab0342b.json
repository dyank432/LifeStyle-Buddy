{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAvoidingViewBase } from \"react-native-web/dist/index\";\nimport Task from \"./components/Habits\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentDate = _useState6[0],\n      setCurrentDate = _useState6[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var deleteHabit = function deleteHabit(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(function () {\n    var date = new Date().getDate();\n    var m = new Date();\n    var year = new Date().getFullYear();\n    setCurrentDate(monthNames[m.getMonth()] + ' ' + date + ' , ' + year);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.tasksWrapper\n  }, React.createElement(Profile, null), React.createElement(Text, {\n    style: styles.sectionTitle\n  }, \"Habits\"), React.createElement(Text, {\n    style: styles.date\n  }, \"Today's Date: \", currentDate), React.createElement(ScrollView, {\n    style: styles.items\n  }, taskItems.map(function (item, index) {\n    return React.createElement(View, null, React.createElement(View, {\n      style: styles.circular\n    }, React.createElement(Text, {\n      style: styles.x,\n      key: index,\n      onPress: function onPress() {\n        return deleteHabit(index);\n      }\n    }, \"X\")), React.createElement(Task, {\n      text: item\n    }));\n  }))), React.createElement(KeyboardAvoidingView, {\n    style: styles.writeTaskWrapper,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\"\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: 'Write a habit',\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper\n  }, React.createElement(Text, {\n    style: styles.addText\n  }, \"+\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#8AC8C7'\n  },\n  tasksWrapper: {\n    paddingTop: 60,\n    paddingHorizontal: 10,\n    maxHeight: '89%',\n    height: '100%'\n  },\n  sectionTitle: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#242120',\n    textAlign: 'center',\n    borderRadius: 10,\n    borderColor: '#028476',\n    borderWidth: 2,\n    backgroundColor: '#E2ECEB'\n  },\n  date: {\n    color: '#242120',\n    textAlign: 'center',\n    padding: 10,\n    borderRadius: 10,\n    borderColor: '#028476',\n    borderWidth: 2,\n    marginTop: 10,\n    backgroundColor: '#E2ECEB'\n  },\n  items: {\n    marginTop: 10,\n    backgroundColor: '#028476',\n    padding: 10,\n    borderRadius: 5\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 10,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#E2ECEB',\n    borderRadius: 60,\n    borderColor: '#028476',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#E2ECEB',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#028476',\n    borderWidth: 1\n  },\n  addText: {\n    color: '#028476'\n  },\n  circular: {\n    position: 'relative',\n    bottom: -20,\n    left: 300,\n    width: 12,\n    height: 12,\n    borderColor: '#028476',\n    borderWidth: 9,\n    borderRadius: 9,\n    opacity: 0.3,\n    zIndex: 1\n  },\n  x: {\n    color: '#242120',\n    position: 'absolute',\n    bottom: -8,\n    left: -5\n  }\n});","map":{"version":3,"sources":["C:/Users/yuant/OneDrive/Desktop/Prog4/COMP3504-Term-Project/App.js"],"names":["StatusBar","React","useState","useEffect","KeyboardAvoidingViewBase","Task","App","task","setTask","taskItems","setTaskItems","currentDate","setCurrentDate","handleAddTask","Keyboard","dismiss","deleteHabit","index","itemsCopy","splice","monthNames","date","Date","getDate","m","year","getFullYear","getMonth","styles","container","tasksWrapper","sectionTitle","items","map","item","circular","x","writeTaskWrapper","Platform","OS","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","maxHeight","height","fontSize","fontWeight","color","textAlign","borderRadius","borderColor","borderWidth","padding","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","left","opacity","zIndex"],"mappings":"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","sourcesContent":["//https://www.youtube.com/watch?v=0kL6nhutjQ8\r\n//https://www.youtube.com/watch?v=00HFzh3w1B8\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, Platform, StyleSheet, Text, ScrollView, TextInput, TouchableOpacity, useColorScheme, View, KeyboardAvoidingViewBase } from 'react-native';\r\nimport Task from './components/Habits';\r\n\r\nexport default function App() {\r\n  const [task, setTask] = useState();\r\n  const[taskItems, setTaskItems] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState();\r\n\r\n  const handleAddTask = () => {\r\n    Keyboard.dismiss();\r\n    setTaskItems([...taskItems, task]);\r\n    setTask(null);\r\n  }\r\n\r\n  const deleteHabit = (index) => {\r\n    let itemsCopy = [...taskItems];\r\n    itemsCopy.splice(index, 1);\r\n    setTaskItems(itemsCopy);\r\n  }\r\n\r\n  //https://stackoverflow.com/questions/1643320/get-month-name-from-date\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n//https://aboutreact.com/react-native-get-current-date-time/\r\n  useEffect(() => {\r\n    var date = new Date().getDate(); //Current Date\r\n    var m = new Date(); //current Month spelled out\r\n    var year = new Date().getFullYear(); //Current Year\r\n    setCurrentDate(monthNames[m.getMonth()] + ' ' + date + ' , ' + year);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.tasksWrapper}>\r\n        <Profile/>\r\n        <Text style={styles.sectionTitle}>Habits</Text>\r\n        <Text style={styles.date}>Today's Date: {currentDate}</Text>\r\n        <ScrollView style={styles.items}>\r\n          {\r\n            taskItems.map((item, index) => {\r\n              return (\r\n                <View>\r\n                  <View style={styles.circular}>\r\n\t                  <Text style={styles.x} key={index} onPress={() => deleteHabit(index)}>X</Text>\r\n                  </View>\r\n                  <Task text={item} />                              \r\n                </View>\r\n              )\r\n            })\r\n          }\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <KeyboardAvoidingView style={styles.writeTaskWrapper} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\r\n          <TextInput style={styles.input} placeholder={'Write a habit'} value={task} onChangeText={text => setTask(text)}/>\r\n          <TouchableOpacity onPress={() => handleAddTask()}>\r\n            <View style={styles.addWrapper}>\r\n              <Text style={styles.addText}>+</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#8AC8C7'\r\n  },\r\n  tasksWrapper: {\r\n    paddingTop: 60,\r\n    paddingHorizontal: 10,\r\n    maxHeight: '89%',\r\n    height: '100%'\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    color: '#242120',\r\n    textAlign: 'center',\r\n    borderRadius: 10,\r\n    borderColor: '#028476',\r\n    borderWidth: 2,\r\n    backgroundColor: '#E2ECEB'\r\n  },\r\n  date: {\r\n    color: '#242120',\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    borderColor: '#028476',\r\n    borderWidth: 2,\r\n    marginTop: 10,\r\n    backgroundColor: '#E2ECEB'\r\n  },\r\n  items: {\r\n    marginTop: 10,\r\n    backgroundColor: '#028476',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  writeTaskWrapper: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#E2ECEB',\r\n    borderRadius: 60,\r\n    borderColor: '#028476',\r\n    borderWidth: 1,\r\n    width: 250,\r\n  },\r\n  addWrapper: {\r\n    width: 50,\r\n    height: 50,\r\n    backgroundColor: '#E2ECEB',\r\n    borderRadius: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderColor: '#028476',\r\n    borderWidth: 1\r\n  },\r\n  addText: {\r\n    color: '#028476',\r\n  },\r\n  circular: {\r\n      position: 'relative',\r\n      bottom: -20,\r\n      left: 300,\r\n      width: 12,\r\n      height: 12,\r\n      borderColor: '#028476',\r\n      borderWidth: 9,\r\n      borderRadius: 9,\r\n      opacity: 0.3,\r\n      zIndex: 1\r\n  },\r\n  x: {\r\n      color: '#242120',\r\n      position: 'absolute',\r\n      bottom: -8,\r\n      left: -5\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}